server:
  port: 8080

lottery:
  # 定时任务参数
  worker:
    rabbitMQ:
      # 逗号分隔
      databases: 1,2



# 多数据源路由配置
mini-db-router:
  jdbc:
    datasource:
      dbCount: 2
      tbCount: 4
      default: db00
      routerKey: uId
      list: db01,db02
      db00:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.192.149:3307/lottery?useUnicode=true
        username: root
        password: 123456
      db01:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.192.149:3307/lottery_01?useUnicode=true
        username: root
        password: 123456
      db02:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.192.149:3307/lottery_02?useUnicode=true
        username: root
        password: 123456

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location:  classpath:/mybatis/config/mybatis-config.xml

# Dubbo 广播方式配置，如果调用不稳定可以修改为直连模式：https://codechina.csdn.net/KnowledgePlanet/Lottery/-/issues/1
dubbo:
  application:
    name: Lottery
    version: 1.0.0
    parameters:
      unicast: false
  registry:
    address: multicast://224.5.6.7:1234
  protocol:
    name: dubbo
    port: 20880
  scan:
    base-packages: cn.itedus.lottery.rpc
spring:
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.192.149:8848
  application:
    name: lottery
  rabbitmq:
    host: 192.168.192.149
    port: 5672
    virtual-host: /
    # 开启发送端确认,即消息到达mq服务器就会执行回调函数
    publisher-confirm-type: correlated
    # 开启发送端返回,即消息到达队列就会执行回调函数
    publisher-returns: true
    template:
      mandatory: true
    # 只要抵达队列，以异步的方式发送，优先回调我们的这个returnconfirm
    listener:
      simple:
        # 消费端手动ack消息
        acknowledge-mode: manual